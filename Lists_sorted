-----------------------------------Sorted Linked Lists---------------------------------------------------------


Node Declaration:
  int value // value of integer type
  node *link // pointer to next node
end declaration;

Add_node (int v):
  // assume that there is enough memory 
  if (List == NULL) // empty
    allocate memory for this new node
    insert new node with value v
    v.link = NULL
  else
    for(temp = head; temp != NULL; temp = temp->link) // traverse list from start to end
      if (v > temp.value)
        make temp point to new node
        make new node point to the node (originally) after temp
      else
        assign original head node to temporary node
        assign new node to head
        make new node point to temporary node (which was the original head)
  
Delete_node (int v):
  if (List == NULL) // empty
    do nothing
  else
    for (temp = head; temp != NULL; temp = temp->ptr) // traverse list from start to end
      if (temp.value == v)
        previous node points to the node after temp
        de-allocate temp
        exit loop
